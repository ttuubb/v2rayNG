name: Build V2rayNG Windows Library

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 0' # 每周日 UTC 时间 00:00 触发（北京时间周日08:00）
  workflow_dispatch: # 允许手动触发

jobs:
  build-libs:
    name: Build Windows Library
    runs-on: windows-latest

    steps:
      # 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # 根据 v2ray-core/xray-core 要求调整

      # 拉取 v2ray-core/xray-core 源码
      - name: Clone v2ray-core/xray-core
        shell: bash
        env:
          HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
          GIT_TRACE: 1
          GIT_CURL_VERBOSE: 1
        run: |
          rm -rf v2ray-core
          for i in 1 2 3 4 5; do
            echo "尝试克隆 v2ray-core 仓库，第 $i 次尝试..."
            echo "使用 git 版本: $(git --version)"
            git clone --verbose --depth 1 --branch v5.15.1 https://github.com/v2fly/v2ray-core.git && {
              echo "v2ray-core 克隆成功"
              cd v2ray-core
              git status
              git rev-parse HEAD
              echo "验证关键文件和目录..."
              required_files=("go.mod" "main/main.go" "app/router/config.proto")
              required_dirs=("app" "common" "proxy" "transport")
              for file in "${required_files[@]}"; do
                if [ ! -f "$file" ]; then
                  echo "错误：缺少关键文件 $file"
                  exit 1
                fi
              done
              for dir in "${required_dirs[@]}"; do
                if [ ! -d "$dir" ]; then
                  echo "错误：缺少关键目录 $dir"
                  exit 1
                fi
              done
              echo "检查文件权限..."
              find . -type f -exec chmod 644 {} \;
              find . -type d -exec chmod 755 {} \;
              echo "所有验证通过"
              cd ..
              break
            } || {
              echo "克隆失败，错误代码: $?"
              if [ $i -lt 5 ]; then
                echo "等待 60 秒后重试..."
                sleep 60
              else
                echo "克隆失败，已达到最大重试次数"
                git clone --verbose --depth 1 --branch v5.15.1 git://github.com/v2fly/v2ray-core.git && {
                  echo "使用 git 协议克隆成功"
                  cd v2ray-core
                  git status
                  git rev-parse HEAD
                  echo "验证关键文件和目录..."
                  required_files=("go.mod" "main/main.go" "app/router/config.proto")
                  required_dirs=("app" "common" "proxy" "transport")
                  for file in "${required_files[@]}"; do
                    if [ ! -f "$file" ]; then
                      echo "错误：缺少关键文件 $file"
                      exit 1
                    fi
                  done
                  for dir in "${required_dirs[@]}"; do
                    if [ ! -d "$dir" ]; then
                      echo "错误：缺少关键目录 $dir"
                      exit 1
                    fi
                  done
                  echo "检查文件权限..."
                  find . -type f -exec chmod 644 {} \;
                  find . -type d -exec chmod 755 {} \;
                  echo "所有验证通过"
                  cd ..
                  break
                } || {
                  echo "所有尝试都失败了"
                  exit 1
                }
              fi
            }
          done
          if [ ! -d "v2ray-core" ]; then
            echo "克隆验证失败：目录不存在"
            ls -la
            exit 1
          fi
          echo "最终目录结构："
          ls -la v2ray-core/

      # 创建输出目录
      - name: Create Output Directory
        run: |
          mkdir -p windows

      # 编译 Windows 库
      - name: Build Windows Library
        run: |
          cd v2ray-core
          go build -buildmode=c-shared -o ../windows/libv2ray.dll ./main

      # 上传构建产物
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-libs
          path: windows/libv2ray.dll
          if-no-files-found: warn # 如果没有文件，仅警告而不失败