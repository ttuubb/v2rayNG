name: Build v2ray-core/xray-core

on:
  push:
    branches:
      - main  # 监听 main 分支的推送
  pull_request:
    branches:
      - main
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [windows-x86, windows-amd64, android-arm, android-arm64, android-x86, android-x86_64, ios-arm64, ios-x86_64]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'  # 适配 v2ray-core/xray-core

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang cmake pkg-config

      - name: Set environment variables
        run: |
          case "${{ matrix.platform }}" in
            "windows-x86")      echo "GOOS=windows" >> $GITHUB_ENV && echo "GOARCH=386" >> $GITHUB_ENV ;;
            "windows-amd64")    echo "GOOS=windows" >> $GITHUB_ENV && echo "GOARCH=amd64" >> $GITHUB_ENV ;;
            "android-arm")      echo "GOOS=android" >> $GITHUB_ENV && echo "GOARCH=arm" >> $GITHUB_ENV ;;
            "android-arm64")    echo "GOOS=android" >> $GITHUB_ENV && echo "GOARCH=arm64" >> $GITHUB_ENV ;;
            "android-x86")      echo "GOOS=android" >> $GITHUB_ENV && echo "GOARCH=386" >> $GITHUB_ENV ;;
            "android-x86_64")   echo "GOOS=android" >> $GITHUB_ENV && echo "GOARCH=amd64" >> $GITHUB_ENV ;;
            "ios-arm64")        echo "GOOS=ios" >> $GITHUB_ENV && echo "GOARCH=arm64" >> $GITHUB_ENV ;;
            "ios-x86_64")       echo "GOOS=ios" >> $GITHUB_ENV && echo "GOARCH=amd64" >> $GITHUB_ENV ;;
          esac

      - name: Build v2ray-core/xray-core
        run: |
          git clone --depth 1 https://github.com/v2ray/v2ray-core.git
          cd v2ray-core
          go mod tidy
          go build -o output/v2ray-${{ matrix.platform }} ./main

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: v2ray-${{ matrix.platform }}
          path: v2ray-core/output/v2ray-*
