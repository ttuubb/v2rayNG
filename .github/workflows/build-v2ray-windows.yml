name: Build V2rayNG Libraries

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 0' # 每周日 UTC 时间 00:00 触发（北京时间周日08:00）
  workflow_dispatch: # 允许手动触发

jobs:
  build-libs:
    name: Build Libraries for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        platform: [android, ios, windows, macos, linux]
        include:
          - platform: android
            os: ubuntu-latest
          - platform: ios
            os: macos-latest
          - platform: windows
            os: windows-latest
          - platform: macos
            os: macos-latest
          - platform: linux
            os: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # 根据 v2ray-core/xray-core 要求调整

      # 安装 Android NDK（仅限 Android 平台）
      - name: Install Android NDK
        if: matrix.platform == 'android'
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip -q android-ndk-r25c-linux.zip -d /usr/local/lib/android
          export ANDROID_NDK_HOME=/usr/local/lib/android/android-ndk-r25c
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          ls -la $ANDROID_NDK_HOME/meta/ # 验证 meta 目录是否存在

      # 安装依赖工具
      - name: Install Dependencies
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/tools/cmd/goimports@latest
        if: matrix.platform == 'android' || matrix.platform == 'ios'

      # 拉取 v2ray-core/xray-core 源码
      - name: Clone v2ray-core/xray-core
        run: |
          git clone https://github.com/v2fly/v2ray-core.git
          cd v2ray-core
          git checkout v5.15.1 # 指定版本，可根据需要调整

      # 创建输出目录
      - name: Create Output Directories
        run: |
          mkdir -p android/app/src/main/jniLibs/arm64-v8a
          mkdir -p android/app/src/main/jniLibs/armeabi-v7a
          mkdir -p android/app/src/main/jniLibs/x86
          mkdir -p android/app/src/main/jniLibs/x86_64
          mkdir -p ios/Frameworks
          mkdir -p windows
          mkdir -p macos
          mkdir -p linux

      # 编译 Android 库
      - name: Build Android Libraries
        if: matrix.platform == 'android'
        run: |
          echo "ANDROID_NDK_HOME is $ANDROID_NDK_HOME"
          cd v2ray-core
          gomobile bind -target android -o ../android/app/src/main/jniLibs/libv2ray.aar ./main
          unzip ../android/app/src/main/jniLibs/libv2ray.aar -d temp
          cp temp/jni/*/* ../android/app/src/main/jniLibs/

      # 编译 iOS 库
      - name: Build iOS Libraries
        if: matrix.platform == 'ios'
        run: |
          cd v2ray-core
          gomobile bind -target ios -o ../ios/Frameworks/V2ray.framework ./main
          # 可选：生成静态库
          go build -buildmode=c-archive -o ../ios/Frameworks/libv2ray.a ./main

      # 编译 Windows 库
      - name: Build Windows Libraries
        if: matrix.platform == 'windows'
        run: |
          cd v2ray-core
          go build -buildmode=c-shared -o ../windows/libv2ray.dll ./main

      # 编译 macOS 库
      - name: Build macOS Libraries
        if: matrix.platform == 'macos'
        run: |
          cd v2ray-core
          go build -buildmode=c-shared -o ../macos/libv2ray.dylib ./main
          # 可选：生成静态库
          go build -buildmode=c-archive -o ../macos/libv2ray.a ./main

      # 编译 Linux 库
      - name: Build Linux Libraries
        if: matrix.platform == 'linux'
        run: |
          cd v2ray-core
          go build -buildmode=c-shared -o ../linux/libv2ray.so ./main
          # 可选：生成静态库
          go build -buildmode=c-archive -o ../linux/libv2ray.a ./main

      # 上传构建产物
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-libs
          path: |
            android/app/src/main/jniLibs/
            ios/Frameworks/
            windows/libv2ray.dll
            macos/libv2ray.*
            linux/libv2ray.*
          if-no-files-found: warn # 如果没有文件，仅警告而不失败