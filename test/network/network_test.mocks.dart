// Mocks generated by Mockito 5.4.5 from annotations
// in v2rayng/test/network/network_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:v2rayng/core/services/network_test_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NetworkTestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkTestService extends _i1.Mock
    implements _i2.NetworkTestService {
  MockNetworkTestService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> measureLatency(
    String? address,
    int? port, {
    String? protocol = 'tcp',
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #measureLatency,
              [address, port],
              {#protocol: protocol},
            ),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<double> measureThroughput(String? address, int? port) =>
      (super.noSuchMethod(
            Invocation.method(#measureThroughput, [address, port]),
            returnValue: _i3.Future<double>.value(0.0),
          )
          as _i3.Future<double>);
}
